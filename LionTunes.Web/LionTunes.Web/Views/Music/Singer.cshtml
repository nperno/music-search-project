@model Hqub.MusicBrainz.API.Entities.Artist

@{
    ViewData["Title"] = "Artist";
}

<h1>Singer</h1>
<div class="alert-danger">@ViewData["error"]</div>
<div>
    <h4>@Model.Name</h4>
    <hr />
    <dl class="row">

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Type)
        </dt>
        <dd class="col-sm-10">
            <span class="badge badge-success">@Model.Type</span>
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Country)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Country)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Disambiguation)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Disambiguation)
        </dd>
        <dt class="col-sm-2">
            Band Members
        </dt>
        <dd class="col-sm-10">
            @{
                var members = Model.Relations.Where(r => r.TargetType == "artist" && r.Type.Contains("member"));
                <ul>
                    @foreach (var relation in members.Where(r => !(bool)r.Ended))
                    {
                        <li><a href="~/Music/Singers?name=@relation.Artist.Name">@relation.Artist.Name</a></li>
                    }
                </ul>
            }
        </dd>
        <dt class="col-sm-2">
            Tags
        </dt>
        <dd class="col-sm-10">

            @if (!(@Model.Tags == null))
            {
                @foreach (var t in Model.Tags)
                {
                    <span class="badge badge-primary">@t.Name</span>
                }
            }

        </dd>
        <dt class="col-sm-2">
            Lyrics
        </dt>
        <dd class="col-sm-10">
            @{ var lyrics = Model.Relations.Where(r => r.TargetType == "url" && r.Type == "lyrics");

                if (lyrics.Count() > 0)
                {
                    <p>You can find lyrics for @Model.Name</p>

                    <ul>
                        @foreach (var relation in lyrics)
                        {
                            <li><a href="@relation.Url.Resource" target="_blank">@relation.Url.Resource</a> </li>
                        }
                    </ul>
                }
            }

        </dd>
    </dl>
</div>
<div>
    <a href='javascript:history.go(-1)'>Return to search results</a>
</div>

